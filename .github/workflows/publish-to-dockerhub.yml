---
name: Publish 🐳 to DockerHub

on:
  workflow_run:
    workflows: ["Linter and tests (before release)"]
    types:
      - completed

jobs:
  build-n-publish:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          pip install packaging
      - name: Wait for PyPI release
        run: |
          pip download gitlabform==${{ env.version }} > /dev/null
          while [ $? -ne 0 ]; do sleep 10; pip3 download gitlabform==${{ env.version }} > /dev/null ; done
        shell: bash {0}
      - name: Docker meta for Alpine-based image
        id: meta-alpine
        uses: crazy-max/docker-metadata-action@v3.4.0
        with:
          images: |
            egnyte/gitlabform
          # Alpine-based images is the main one, so only it gets the 'latest' tag for public releases
          flavor: |
            latest=auto
          # Alpine-based images is the main one, so only it gets the non-suffixed tags
          tags: |
            type=pep440,pattern={{version}}
            type=pep440,pattern={{major}}.{{minor}}
            type=pep440,pattern={{major}}
            type=pep440,pattern={{version}}-alpine3.14
            type=pep440,pattern={{major}}.{{minor}}-alpine3.14
            type=pep440,pattern={{major}}-alpine3.14
      - name: Docker meta for Debian-based image
        id: meta-debian
        uses: crazy-max/docker-metadata-action@v3.4.0
        with:
          images: |
            egnyte/gitlabform
          flavor: |
            latest=false
          tags: |
            type=pep440,pattern={{version}}-buster
            type=pep440,pattern={{major}}.{{minor}}-buster
            type=pep440,pattern={{major}}-buster
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Publish Debian-based image to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./dev/debian.Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta-debian.outputs.tags }}
          labels: ${{ steps.meta-debian.outputs.labels }}
      - name: Publish Alpine-based image to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./dev/alpine.Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta-alpine.outputs.tags }}
          labels: ${{ steps.meta-alpine.outputs.labels }}
